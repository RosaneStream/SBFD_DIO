//Imprimir media ponderada 
java.util.*;
 
public class Program
{
    public static void main(String[] args)
    {
       Scanner input = new Scanner(System.in);
       
        int casos = input.nextInt();
        int cont = 0;
        double media;
        while (cont < casos){
 
            double a = input.nextDouble();
            double b = input.nextDouble();
            double c = input.nextDouble();
	
	   // TODO: complete os espaços em branco com sua solução para o problema
      

            media = ((a*2)+(b*3)+(c*5))/10;
            
            System.out.printf("%.1f %n",media);

              
            cont++;
            }
        
    }
    }



//Gameplays

Entrada
A entrada contém vários casos de teste. A primeira linha de cada caso contém dois inteiros N e I (1 ≤ N ≤ 104, 1000 ≤ I ≤ 9999), o número de gameplays publicados na página e o seu identificador na universidade, respectivamente.

As próximas N linhas descrevem os gameplays publicados. Cada gameplay é descrito por dois inteiros i e j (1000 ≤ i ≤ 9999, j=0 ou 1), onde i é o identificador na universidade do autor do gameplay, e j=0 se o gameplay é de Contra-Strike, ou j=1 se é de Liga of Legendas.

A entrada termina com fim-de-arquivo (EOF).

Saída
Para cada caso de teste, imprima uma única linha com um número indicando quantos gameplays seus de Contra-Strike foram publicados na página.



 java.util.*;

public class Main{
  public static void main(String args[]){
      Scanner sc=new Scanner(System.in);
     
         int number,id;

         number=sc.nextInt();
         id=sc.nextInt();

         int count=0;
         while(number>0){

           int id1,num;

           id1=sc.nextInt();
           num=sc.nextInt();

// TODO: complete os espaços em branco com sua solução para o problema
           if(id== id1     &&  num==0      ){
		 count++;
	    }
             
           number--;
         }
         System.out.println(count);
     
   }
}

Desafio
O objetivo deste desafio é resolvê-lo utilizando o seu conhecimento sobre Arrays, uma estrutura de dados que armazena uma coleção de dados em um bloco de memória.

Você está desenvolvendo um sistema para um local de eventos, neste local, é necessário que a entrada seja permitida apenas para pessoas acima de 18 anos. Faça um programa para ler um número N, a idade de N pessoas. Depois disso, coloque a idade mínima permitida  para se entrar no local, conforme exemplo.
Retorne às idades de quem não puder entrar.

Entrada
A entrada será composta na primeira linha pelo tamanho da array e nas linhas subsequentes pelas idades que preenchem essa array

Saída
A saída deverá retornar as idades que não são permitidas a entrada, conforme exemplo abaixo.

Entrada 

Saída

4

18

22

15

50

Nao poderao entrar as idades:

15

 

Entrada 

Saída

3
50
10

 java.util.*;
 
    public class DIO{

	// TODO: complete os espaços em branco com sua solução para o problema
 
        public static void main(String[] args) {
           
	    //a classe Scanner auxilia na leitura dos dados de entrada
            Scanner scan = new Scanner(System.in);
 
            int N= scan.nextInt();
            String string = scan.nextLine();
	    
	    
	    //quebra string em várias substrings a partir de um caractere
            String[] s = string.split(" ");
 
            double[] idade = new double[N];
 
            for (int i = 0; i < N; i++)
            {
                idade[i] =          ;
            }
 
 
            System.out.println("Nao poderao entrar as idades: ");
            for (int i = 0; i < N; i++)
            {
                if (           )
                {
                    System.out.println(         );
                }
 
            }
                   
        }
    }